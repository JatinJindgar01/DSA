//REVERSE NODES IN GROUP OF K
//TC=O(N) SC=-O(1)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
   
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null || head.next==null)
            return head;
        ListNode prev=null;
        ListNode curr=head;
        ListNode nextNode=null;
        int count=0;
        int len=0;
        ListNode f=head;
        while(f!=null)
        {
            f=f.next;
            len++; 
        }
        if(len<k)
            return head;
        while(curr!=null && count<k)
        {
            nextNode=curr.next;
            curr.next=prev;
            prev=curr;
            curr=nextNode;
            count++;
        }
         
              head.next= reverseKGroup(nextNode,k);
         
         return prev;
        
    }
}