//IMPLEMENT STACK USING QUEUES
//USING TWO 2 QUEUES

class MyStack {
    Queue<Integer> q1;
    Queue<Integer> q2;

    public MyStack() {
        q1=new LinkedList<>();
        q2=new LinkedList<>();
    }
    
    public void push(int x) {
        while(q1.size()!=0)
            q2.add(q1.poll());
        q1.add(x);
        while(q2.size()!=0)
            q1.add(q2.poll());
    }
    
    public int pop() {
        if(q1.size()==0)
            return -1;
        else
            return q1.poll();
    }
    
    public int top() {
        if(q1.size()==0)
            return -1;
        else
            return q1.peek();
    }
    
    public boolean empty() {
        if(q1.size()==0)
            return true;
        else
            return false;
    }
}

//USING 1 QUEUE
class MyStack {
    Queue<Integer> q1;

    public MyStack() {
        q1=new LinkedList<>();
    }
    
    public void push(int x) {
        q1.add(x);
         for(int i=0;i<q1.size()-1;i++)
             q1.add(q1.poll());
    }
    
    public int pop() {
        if(q1.size()==0)
            return -1;
        else
            return q1.poll();
    }
    
    public int top() {
        if(q1.size()==0)
            return -1;
        else
            return q1.peek();
    }
    
    public boolean empty() {
        if(q1.size()==0)
            return true;
        else
            return false;
    }
}
