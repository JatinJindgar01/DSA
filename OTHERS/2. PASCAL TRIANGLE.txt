//PASCAL TRIANGLE. RETURN THE WHOLE PASCAL TRIANGLE GIVEN NO OF ROWS
//TC=O(N*2)    SC=O(N*2)
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> curr=null;
        List<Integer> prev=null;
        for(int i=0;i<numRows;i++)
        {
            curr=new ArrayList<>();
            for(int j=0;j<=i;j++)
            {
                if(j==0 || j==i)
                    curr.add(1);
                else
                {
                    curr.add(prev.get(j-1)+prev.get(j));
                }
            }
            prev=curr;
            ans.add(curr);
        }
        return ans;
    }
}


//PRINT NTH ROW OF PASCAL TRIANGLE(0 BASED INDEXING)
// TC=O(N*N) SC=O(N)

class Solution {
    int factorial(int n, int r)
    {
        long fact=1;
        for(int i=0;i<r;i++)
        {
            fact=fact*(n-i);
            fact=fact/(i+1);
        }
        return (int)fact;
    }
    public List<Integer> getRow(int n) {
        List<Integer> ans=new ArrayList<>();
     
        for(int i=0;i<=n;i++)
        {
            ans.add(factorial(n,i));
        }
        
        return ans;
        
        
    }
}



