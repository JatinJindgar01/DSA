TC=O(NLOGN) O(N)
class Pair implements Comparable<Pair>
    {
        int st;
        int et;
        int pos;
        Pair(int st,int et, int pos)
        {
            this.st=st;
            this.et=et;
            this.pos=pos;
        }
        public int compareTo(Pair other)
        {
            if(this.et!=other.et)
            {
                return this.et-other.et;
            }
            else
            {
                return this.pos-other.pos;
            }
        }
    }
class Solution 
{
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.

    public static int maxMeetings(int start[], int end[], int n)
    {
        // add your code here
        ArrayList<Pair> arr=new ArrayList<>();
        for(int i=0;i<n;i++)
        {
            arr.add(new Pair(start[i],end[i],i+1));
        }
        Collections.sort(arr);
        ArrayList<Integer> ans=new ArrayList<>();
        ans.add(arr.get(0).pos);
        int limit=arr.get(0).et;
        for(int i=1;i<n;i++)
        {
            if(arr.get(i).st>limit)
            {
                limit=arr.get(i).et;
                ans.add(arr.get(i).pos);
            }
        }
        return ans.size();
    }
}

