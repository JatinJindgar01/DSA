// FIND DUPLICATE IN AN ARRAY OF N+1 INTEGERS
// BRUTE TC=O(NLOGN) SC=O(1)
// SORT THE ARRAY AND CHECK FOR ADJACENT ELEMENTS

class Solution {
    public int findDuplicate(int[] nums) {
        Arrays.sort(nums);
        int n=nums.length;
        for(int i=1;i<n;i++)
        {
            if(nums[i]==nums[i-1])
            return nums[i];
        }
    }
}
//9872630239   
//BETTER CYCLE DETECTION ALGORITHM
// TC=O(N) SC=O(1)

class Solution {
    public int findDuplicate(int[] nums) {
        int slow=nums[0];
        int fast=nums[0];
        do{
            slow=nums[slow];
            fast=nums[nums[fast]];
        }while(slow!=fast);
        fast=nums[0];
        while(slow!=fast)
        {
            slow=nums[slow];
            fast=nums[fast];
        }
        return slow;
    }
}