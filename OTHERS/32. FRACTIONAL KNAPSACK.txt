//FRACTIONAL KNAPSACK
//TC=O(NLOGN) SC=O(1)
class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}

class mc implements Comparator<Item>
{
    public int compare(Item i1,Item i2)
    {
        double a=i1.value;
        double b=i2.value;
        double c=i1.weight;
        double d=i2.weight;
        double e=a/c;
        double f=b/d;
        if(e>f)
        return -1;
        else if(e<f)
        return 1;
        else
        return 0;
    }
}
   
class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W1, Item arr[], int n) 
    {
        // Your code
        int i=0;
        double pr=0;
        double W=W1;
        mc ob =new mc();
        Arrays.sort(arr,ob);
        while(W>0 && i<n)
        {
            if(W>=(double)arr[i].weight)
            {
                pr+=(double)arr[i].value;
                W=W-(double)arr[i].weight;
                
            }
            else
            {
                pr+=((double)W/(double)arr[i].weight)*(double)arr[i].value;
                W=0;
            }
            i++;
        }
        return pr;
        
    }
}