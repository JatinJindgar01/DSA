//POW(x,n)
//RECURSIVELY TC=O(N) SC=O(1)
// CAN CAUSE TLE
class Solution {
    public double myPow(double x, int n) {
        if(x==0)
        return 0;
        else if(n==0)
        return 1;
        else if(n%2==0)
        {
            return myPow(x,n/2)*myPow(x,n/2);
        }
        else
        {
            if(n>0)
            {
                return x*myPow(x,n/2)*myPow(x,n/2);
            }
            else
            {
                return (myPow(x,n/2)*myPow(x,n/2))/x;
            }
        }
    }
}

// ITERATIVELY TC=O(LOGN) SC=O(1)
//BEST SOLUTION

class Solution {
    public double myPow(double x, int n) {
        if(x==0)
        return 0;
        else if(n==0)
        return 1;
        else
        {
            double temp=myPow(x,n/2);
            if(n%2==0)
            {
                return temp*temp;
            }
            else 
            {
                if(n>0)
                {
                    return x*temp*temp;
                }
                else
                {
                    return temp*temp/x;
                }
            }
        }
    }
}