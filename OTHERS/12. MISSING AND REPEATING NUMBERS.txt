// MISSING AND REPEATING NUMBERS
// USING XOR TC=O(N) SC=O(1)

public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] repeatedNumber(final int[] A) {
        int n=A.length;
        int xor=0;
        for(int i=0;i<n;i++)
        {
            xor=xor^A[i];
        }
        for(int i=1;i<=n;i++)
        {
            xor=xor^i;
        }
        xor=xor & (-xor);
        int x=0;
        int y=0;
        for(int i=0;i<n;i++)
        {
            if((xor & A[i])==0)
            x=x^A[i];
            else
            y=y^A[i];
        }
        for(int i=1;i<=n;i++)
        {
            if((xor & i)==0)
            x=x^i;
            else
            y=y^i;
        }
        int ans[]=new int[2];
        int mn=0;
        int rn=0;
        for(int i=0;i<n;i++)
        {
            if(A[i]==x)
            {
                rn=x;
                mn=y;
                break;
            }
            else if(A[i]==y)
            {
                rn=y;
                mn=x;
                break;
            }
        }
        ans[0]=rn;
        ans[1]=mn;
        return ans;
    }
}
