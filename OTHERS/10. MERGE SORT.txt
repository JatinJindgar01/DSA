// MERGE SORT
// TC=O(NLOGN)  SC=O(N)

class Solution
{
    void merge(int arr[], int l, int m, int r)
    {
         // Your code here
         int ls=m-l+1;
         int rs=r-m;
         int left[]=new int[ls];
         int right[]=new int[rs];
         int k=l;
         for(int i=0;i<ls;i++)
         {
             left[i]=arr[k];
             k++;
         }
         for(int i=0;i<rs;i++)
         {
             right[i]=arr[k];
             k++;
         }
         int i=0;
         int j=0;
         int h=l;
         while(i<ls && j<rs)
         {
             if(left[i]<=right[j])
             {
                arr[h]=left[i];
                i++;
                h++;
             }
             else
             {
                 arr[h]=right[j];
                 j++;
                 h++;
             }
         }
         while(i<ls)
         {
             arr[h]=left[i];
             i++;
             h++;
         }
         while(j<rs)
         {
             arr[h]=right[j];
             j++;
             h++;
         }
         
    }
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        if(l<r)
        {
            int m=(l+r)/2;
            mergeSort(arr,l,m);
            mergeSort(arr,m+1,r);
            merge(arr,l,m,r);
        }
    }
}
