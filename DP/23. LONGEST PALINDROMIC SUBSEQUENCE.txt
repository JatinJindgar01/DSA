//LONGEST PALINDROMIC SUBSEQUENCE

//CALL LCS ON S AND REVERSE OF S

class Solution {
    public int longestCommonSubsequence(String s1, String s2) {
       int n=s1.length();
    int m=s2.length();
    
    // Base Case is covered as we have initialized the prev and cur to 0.
    int prev[]=new int[m+1];
    
    for(int ind1=1;ind1<=n;ind1++){
        int cur[]=new int[m+1];
        for(int ind2=1;ind2<=m;ind2++){
            if(s1.charAt(ind1-1)==s2.charAt(ind2-1))
                cur[ind2] = 1 + prev[ind2-1];
            else
                cur[ind2] = 0 + Math.max(prev[ind2],cur[ind2-1]);
        }
        prev=cur;
    }
    
    return prev[m];
    }
    public String reverse(String s)
    {
        String ans="";
        int n=s.length();
        for(int i=0;i<n;i++)
        {
            ans=s.charAt(i)+ans;
        }
        return ans;
    }
    public int longestPalindromeSubseq(String s) {
        
        return longestCommonSubsequence(s,reverse(s));
    }
}