//BFS OF GRAPH
//TC=O(N+E) SC=O(N)+O(N) FOR QUEUE AND VISITED ARRAY

class Solution {
    public void bfs(int i, ArrayList<ArrayList<Integer>> adj, boolean visited[], ArrayList<Integer> ans)
    {
        Queue<Integer> q=new LinkedList<>();
        q.add(i);
        visited[i]=true;
        while(q.isEmpty()==false)
        {
            int node=q.poll();
            ans.add(node);
            for(int j=0;j<adj.get(node).size();j++)
            {
                int child=adj.get(node).get(j);
                if(visited[child]==false)
                {
                    q.add(child);
                    visited[child]=true;
                }
            }
        }
    }
    // Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> ans=new ArrayList<>();
        boolean visited[]=new boolean[V];
        for(int i=0;i<V;i++)
        {
            if(visited[i]==false)
            {
                bfs(0,adj,visited,ans);
            }
        }
        return ans;
    }
}

