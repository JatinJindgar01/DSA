//TOP VIEW OF BINARY TREE

//TC=O(N) SC=O(N)

class Solution
{
    static class QueueMy
    {
        int hd;
        Node node;
        QueueMy(int hd, Node node)
        {
            this.hd=hd;
            this.node=node;
        }
    }
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root)
    {
        // add your code
        TreeMap<Integer, Integer> mp=new TreeMap<>();
        Queue<QueueMy> q=new LinkedList<>();
        q.add(new QueueMy(0,root));
        while(q.size()>0)
        {
            QueueMy p=q.poll();
            if(mp.containsKey(p.hd)==false)
            mp.put(p.hd,p.node.data);
            if(p.node.left!=null)
            q.add(new QueueMy(p.hd-1,p.node.left));
            if(p.node.right!=null)
            q.add(new QueueMy(p.hd+1,p.node.right));
        }
        Collection<Integer> c=mp.values();
        ArrayList<Integer> ans=new ArrayList<>(c);
        return ans;
    }
}